package com.sparta.todo.mock;

import com.sparta.todo.domain.comment.entity.CommentEntity;
import com.sparta.todo.domain.comment.model.Comment;
import com.sparta.todo.domain.comment.repository.CommentRepository;
import jakarta.persistence.EntityNotFoundException;
import java.util.HashMap;
import java.util.Map;
import org.springframework.test.util.ReflectionTestUtils;

public class MockCommentRepository implements CommentRepository {
    private Long autoGeneratedId = 0L;
    private final Map<Long, CommentEntity> store = new HashMap<>();

    @Override
    public Comment findCommentBy(Long id) {
        return store.values().stream()
            .filter(commentEntity -> commentEntity.getCommentId().equals(id))
            .map(Comment::from)
            .findAny()
            .orElseThrow(EntityNotFoundException::new);
    }

    @Override
    public void save(CommentEntity commentEntity) {
        store.put(++autoGeneratedId, commentEntity);
        ReflectionTestUtils.setField(commentEntity, "commentId", autoGeneratedId);
    }

    @Override
    public void update(Comment comment) {
        CommentEntity commentEntity = store.get((Long) ReflectionTestUtils.getField(comment, "commentId"));

        ReflectionTestUtils.setField(commentEntity, "comment", ReflectionTestUtils.getField(comment, "comment"));
    }

    @Override
    public void delete(Comment comment) {
        store.remove((Long)ReflectionTestUtils.getField(comment, "commentId"));
    }
}
